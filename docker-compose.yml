version: '3.8'

services:
  web:
    build: .
    command: gunicorn --workers 4 --bind 0.0.0.0:8000 Booking.wsgi:application
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - DB_HOST_MASTER=db-master
      - DB_NAME_MASTER=booking_db
      - DB_USER_MASTER=user
      - DB_PASSWORD_MASTER=password
      - DB_HOST_SLAVE=db-slave
      - DB_NAME_SLAVE=booking_db
      - DB_USER_SLAVE=user
      - DB_PASSWORD_SLAVE=password
    depends_on:
      db-master:
        condition: service_healthy
      db-slave:
        condition: service_healthy

  db-master:
    image: mysql:8.0
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    command:
      - --server-id=1
      - --log-bin=mysql-bin
      - --binlog-do-db=booking_db
    volumes:
      # Montujemy skrypt, który utworzy nam użytkownika replikacji
      - ./init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
      - master_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      # Te zmienne będą użyte przez nasz skrypt init-master.sh
      MYSQL_REPLICATION_USER: replication_user
      MYSQL_REPLICATION_PASSWORD: replication_password
      MYSQL_DATABASE: booking_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-slave:
    image: mysql:8.0
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    depends_on:
      db-master:
        condition: service_healthy
    volumes:
      - ./init-slave.sh:/docker-entrypoint-initdb.d/init-slave.sh
      - slave_db_data:/var/lib/mysql
    command:
      - --server-id=2
      - --read-only=1
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: booking_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  master_db_data:
  slave_db_data: